#!/bin/bash

# This tells you whether or not you have an oc login
# and can therefore do everything including switching projects
function check_ocp() {
    set +e
    oc status &> /dev/null
    res="$?"
    set -e
    OCP="$res"
}

# This tells you that you have at least an in-cluster config,
# that is KUBECONFIG has been set to point to a valid kube-config
# file (but you may not have a login which limits commands for projects)
function check_whoami() {
    set +e
    oc whoami &> /dev/null
    res="$?"
    set -e
    WHOAMI="$res"
    OCP="$res"
}

function set_curr_project() {
    orig_project=
    set +e
    if [ "$OCP" -eq 0 ]; then
        orig_project=$(oc project -q 2>/dev/null)
        if [ "$?" -ne 0 ]; then
            orig_project=
        fi
    fi
    set -e
}

function restore_curr_project() {
    if [ ! -z ${orig_project} ]; then
        set +e
        oc project $orig_project > /dev/null
        set -e
    fi
}

function find_project() {
    local res
    local n
    set +e
    n=$(oc get namespace -l peak.test.project="$1" -o=jsonpath="{.items[0].metadata.name}" 2>/dev/null)
    res="$?"
    set -e
    if [ "$res" -eq 0 ]; then
	echo "$n"
    else
	echo ""
    fi
}

function random_name() {
    echo "$1-"$(cat /dev/urandom | tr -dc 'a-z' | fold -w 4 | head -n 1)
}

function make_project_body() {
    oc create namespace "$1" > /dev/null
    oc label namespace "$1" peak.test.project=$2 > /dev/null
}

function make_project() {
    if [ "$OCP" -eq 0 ]; then
	local proj
	proj=$(find_project $1)
        set +e
        if [ "$proj" == "" ]; then
            proj=$(random_name $1)
	    echo "Creating namespace $proj"
            make_project_body $proj $1
        fi
        set -e
    fi
}

function go_to_project() {
    local proj=
    if [ "$OCP" -eq 0 ]; then
	proj=$(find_project $1)
        set +e
        if [ "$proj" == "" ]; then
            proj=$(random_name $1)
            make_project_body $proj $1
        fi
	oc project $proj > /dev/null
        set -e
    fi
    echo $proj
}

function del_project() {
    if [ "$OCP" -eq 0 ]; then
	local proj
	proj=$(find_project $1)
        set +e
        if [ "$proj" != "" ]; then
            echo "Deleting namespace $proj"
            oc delete namespace $proj &>/dev/null
        fi
        set -e
    fi
}

function clean_project() {
    if [ "$OCP" -eq 0 ]; then
	local proj
	proj=$(find_project $1)
        set +e
        if [ "$proj" == "" ]; then
	    proj=$(random_name $1)
	    echo "Creating namespace $proj"
	    make_project_body $proj $1
        else
            echo "Recreating namespace $proj"
	    oc delete namespace $proj &> /dev/null
	    while true; do
                oc get namespace $proj &> /dev/null
		if [ "$?" -ne 0 ]; then
		    break
		fi
		sleep 5
	    done
            make_project_body $proj $1
        fi
        set -e
    fi
}
